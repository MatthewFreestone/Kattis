from sys import stdin

def main():
    while True:
        line = stdin.readline()
        if not line:
            break
        values = []
        weights = []
        c,n = map(int,line.split())
        for _ in range(n):
            v,w = map(int,stdin.readline().split())
            values.append(v)
            weights.append(w)
        memo = [[-1]*(c+1) for _ in range(n)]
        path_memo = [[0]*(c+1) for _ in range(n)]
        for i in range(n): memo[i][0] = 0
        for w in range(c+1): memo[0][w] = 0
        # print(memo)

        for id in range(1, n):
            for cw in range(1, c+1):
                if weights[id] > cw:
                    memo[id][cw] = memo[id-1][cw]
                    path_memo[id][cw] = path_memo[id-1][cw] 
                else:
                    take = values[id] + memo[id-1][cw - weights[id]]
                    leave = memo[id-1][cw]
                    if take > leave:
                        memo[id][cw] = take
                        path_memo[id][cw] = path_memo[id-1][cw - weights[id]] ^ (1<<id)
                    else:
                        memo[id][cw] = leave
                        path_memo[id][cw] = path_memo[id-1][cw]
        # print(memo)
        # print(path_memo)
        path = path_memo[n-1][c]
        res = []
        i = 0
        while path and i < 2001:
            t = 1 << i
            if path & t:
                res.append(str(i))
                path ^= t
            i += 1
        print(len(res), ' '.join(res), sep='\n')
                


if __name__ == '__main__':
    main()
